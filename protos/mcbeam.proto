syntax="proto3";

package mcbeamproto;

enum MsgType {
    MsgRequest = 0;
    MsgNotify = 1;
    MsgResponse = 2;
    MsgPush = 3;
}
enum RPCType {
    Sys = 0;
    User = 1;
}

service Mcbeam {
    rpc Call(Request) returns (Response) {}
    rpc PushToUser(Push) returns (Response) {}
    rpc SessionBindRemote(BindMsg) returns (Response) {}
    rpc KickUser(KickMsg) returns (KickAnswer) {}
}
message Error {
    string code = 1;
    string msg = 2;
    map<string, string> metadata = 3;
}

message Session {
    int64 id = 1;
    string uid = 2;
    bytes data = 3;
}

message Msg {
    uint64 id = 1;
    string route = 2;
    bytes data = 3;
    string reply = 4;
    MsgType type = 5;
}

message Request {
    RPCType type = 1;
    Session session = 2;
    Msg msg = 3;
    string frontendID = 4;
    bytes metadata = 5;
}
message Response {
    bytes data = 1;
    Error error = 2;
}
message KickMsg {
    string userId = 1;
}

message KickAnswer {
    bool kicked = 1;
}
message Push {
    string route = 1;
    string uid = 2;
    bytes data = 3;
}
message BindMsg {
    string uid = 1;
    string fid = 2;
}